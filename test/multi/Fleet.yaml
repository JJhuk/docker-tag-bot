apiVersion: "agones.dev/v1"
kind: Fleet
# Fleet Metadata
# https://v1-21.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.21/#objectmeta-v1-meta
metadata:
  name: fleet
  namespace: multi
spec:
  # the number of GameServers to keep Ready or Allocated in this Fleet
  replicas: 5
  # defines how GameServers are organised across the cluster.
  # Options include:
  # "Packed" (default) is aimed at dynamic Kubernetes clusters, such as cloud providers, wherein we want to bin pack
  # resources
  # "Distributed" is aimed at static Kubernetes clusters, wherein we want to distribute resources across the entire
  # cluster
  scheduling: Packed
  # a GameServer template - see:
  # https://agones.dev/site/docs/reference/gameserver/ for all the options
  strategy:
    # The replacement strategy for when the GameServer template is changed. Default option is "RollingUpdate",
    # "RollingUpdate" will increment by maxSurge value on each iteration, while decrementing by maxUnavailable on each
    # iteration, until all GameServers have been switched from one version to another.
    # "Recreate" terminates all non-allocated GameServers, and starts up a new set with the new details to replace them.
    type: RollingUpdate
    # Only relevant when `type: RollingUpdate`
    rollingUpdate:
      # the amount to increment the new GameServers by. Defaults to 25%
      maxSurge: 25%
      # the amount to decrements GameServers by. Defaults to 25%
      maxUnavailable: 25%
  template:
    # GameServer specification
    spec:
      ports:
        - name: grpc
          portPolicy: Dynamic
          containerPort: 10300
          protocol: TCP
        - name: http
          portPolicy: Dynamic
          containerPort: 80
          protocol: TCP
      health:
        initialDelaySeconds: 30
        periodSeconds: 60
      # Parameters for game server sidecar
      sdkServer:
        logLevel: Info
        grpcPort: 9357
        httpPort: 9358
      # The GameServer's Pod template
      players:
        # set this GameServer's initial player capacity to 100. Should equal playerCount Max in GameServerAllocation
        initialCapacity: 50
      template:
        spec:
          containers:
            - name: app
              image: ecr-path/multi:main-d1dc0de
              volumeMounts:
                - mountPath: /app/appsettings.json
                  name: configmap
                  readOnly: true
                  subPath: appsettings.json
